[EOPSY] Laboratory task 3

Jan Jasionek 

--[ YOUR TASK ]-------------------------------------------------------

Create a configuration file in which all processes run an average
of 2000 milliseconds with a standard deviation of zero, and which
are blocked for input or output every 500 milliseconds. Run the
simulation for 10000 milliseconds with 2 processes. Examine the
two output files. Try again for 5 processes. Try again for 10
processes. Explain what's happening.

----------------------------------------------------------------------

Observations and comments:

1. Simulation for 2 processes:

Configuration:

// # of Process	
numprocess 2

// mean deivation
meandev 2000

// standard deviation
standdev 0

// process    # I/O blocking
process 500
process 500

// duration of the simulation in milliseconds
runtime 10000


Observation:

Summary results:

Scheduling Type: Batch (Nonpreemptive)
Scheduling Name: First-Come First-Served
Simulation Run Time: 4000
Mean: 2000
Standard Deviation: 0
Process #	CPU Time	IO Blocking	CPU Completed	CPU Blocked
0		2000 (ms)	500 (ms)	2000 (ms)	3 times
1		2000 (ms)	500 (ms)	2000 (ms)	3 times

Summary processes:

Process: 0 registered... (2000 500 0 0)
Process: 0 I/O blocked... (2000 500 500 500)
Process: 1 registered... (2000 500 0 0)
Process: 1 I/O blocked... (2000 500 500 500)
Process: 0 registered... (2000 500 500 500)
Process: 0 I/O blocked... (2000 500 1000 1000)
Process: 1 registered... (2000 500 500 500)
Process: 1 I/O blocked... (2000 500 1000 1000)
Process: 0 registered... (2000 500 1000 1000)
Process: 0 I/O blocked... (2000 500 1500 1500)
Process: 1 registered... (2000 500 1000 1000)
Process: 1 I/O blocked... (2000 500 1500 1500)
Process: 0 registered... (2000 500 1500 1500)
Process: 0 completed... (2000 500 2000 2000)
Process: 1 registered... (2000 500 1500 1500)
Process: 1 completed... (2000 500 2000 2000)

Comment:

During the execution, non-preemptive scheduling is used (also called as cooperative scheduling in difference to preemptive scheduling).
The CPU is allocated to the process till it terminates or switches to waiting state.
We can observe that only one process is running at the time, it is not possible for both processes to be executed simultaneously,
when the second process is starting the first one is being blocked.
That process switching happens every 500ms, thn the previously blocked process resumes its execution,
in fact every process is blocked 3 times so the execution is divided into 4 parts, 500ms * 4 parts = 2000ms, 2 processes * 2000 ms = 4000 ms
so the full simulation run time is equal to 4000ms, less than maximum time (10000 ms).

----------------------------------------------------------------------

2. Simulation for 5 processes:

Configuration:

// # of Process	
numprocess 5

// mean deivation
meandev 2000

// standard deviation
standdev 0

// process    # I/O blocking
process 500
process 500
process 500
process 500
process 500

// duration of the simulation in milliseconds
runtime 10000

Observation:

Summary results:

Scheduling Type: Batch (Nonpreemptive)
Scheduling Name: First-Come First-Served
Simulation Run Time: 10000
Mean: 2000
Standard Deviation: 0
Process #	CPU Time	IO Blocking	CPU Completed	CPU Blocked
0		2000 (ms)	500 (ms)	2000 (ms)	3 times
1		2000 (ms)	500 (ms)	2000 (ms)	3 times
2		2000 (ms)	500 (ms)	2000 (ms)	3 times
3		2000 (ms)	500 (ms)	2000 (ms)	3 times
4		2000 (ms)	500 (ms)	2000 (ms)	3 times

Summary processes:

Process: 0 registered... (2000 500 0 0)
Process: 0 I/O blocked... (2000 500 500 500)
Process: 1 registered... (2000 500 0 0)
Process: 1 I/O blocked... (2000 500 500 500)
Process: 0 registered... (2000 500 500 500)
Process: 0 I/O blocked... (2000 500 1000 1000)
Process: 1 registered... (2000 500 500 500)
Process: 1 I/O blocked... (2000 500 1000 1000)
Process: 0 registered... (2000 500 1000 1000)
Process: 0 I/O blocked... (2000 500 1500 1500)
Process: 1 registered... (2000 500 1000 1000)
Process: 1 I/O blocked... (2000 500 1500 1500)
Process: 0 registered... (2000 500 1500 1500)
Process: 0 completed... (2000 500 2000 2000)
Process: 1 registered... (2000 500 1500 1500)
Process: 1 completed... (2000 500 2000 2000)
Process: 2 registered... (2000 500 0 0)
Process: 2 I/O blocked... (2000 500 500 500)
Process: 3 registered... (2000 500 0 0)
Process: 3 I/O blocked... (2000 500 500 500)
Process: 2 registered... (2000 500 500 500)
Process: 2 I/O blocked... (2000 500 1000 1000)
Process: 3 registered... (2000 500 500 500)
Process: 3 I/O blocked... (2000 500 1000 1000)
Process: 2 registered... (2000 500 1000 1000)
Process: 2 I/O blocked... (2000 500 1500 1500)
Process: 3 registered... (2000 500 1000 1000)
Process: 3 I/O blocked... (2000 500 1500 1500)
Process: 2 registered... (2000 500 1500 1500)
Process: 2 completed... (2000 500 2000 2000)
Process: 3 registered... (2000 500 1500 1500)
Process: 3 completed... (2000 500 2000 2000)
Process: 4 registered... (2000 500 0 0)
Process: 4 I/O blocked... (2000 500 500 500)
Process: 4 registered... (2000 500 500 500)
Process: 4 I/O blocked... (2000 500 1000 1000)
Process: 4 registered... (2000 500 1000 1000)
Process: 4 I/O blocked... (2000 500 1500 1500)
Process: 4 registered... (2000 500 1500 1500)

Comment:

We can observe that in a nonpreemptive mode after blocking one process by the next one,
the programm goes back to previous, not fully executed process so we can say that processes are executed in 3 pairs:
0-1
2-3
4
process number 4 has no pair because the number of processes was odd. Only after fully execution of the first pair, the second is starting and so on.
Switching has been made as in the previous exercise.
Total runtime was enough to run all the processes(every process was taking 2000ms,
2000ms * 5 processes = 10000ms so our maximum time).

----------------------------------------------------------------------

3. Simulation for 10 processes:

Configuration:

// # of Process	
numprocess 5

// mean deivation
meandev 2000

// standard deviation
standdev 0

// process    # I/O blocking
process 500
process 500
process 500
process 500
process 500
process 500
process 500
process 500
process 500
process 500

// duration of the simulation in milliseconds
runtime 10000

Observation:

Summary results:

Scheduling Type: Batch (Nonpreemptive)
Scheduling Name: First-Come First-Served
Simulation Run Time: 10000
Mean: 2000
Standard Deviation: 0
Process #	CPU Time	IO Blocking	CPU Completed	CPU Blocked
0		2000 (ms)	500 (ms)	2000 (ms)	3 times
1		2000 (ms)	500 (ms)	2000 (ms)	3 times
2		2000 (ms)	500 (ms)	2000 (ms)	3 times
3		2000 (ms)	500 (ms)	2000 (ms)	3 times
4		2000 (ms)	500 (ms)	1000 (ms)	2 times
5		2000 (ms)	500 (ms)	1000 (ms)	1 times
6		2000 (ms)	500 (ms)	0 (ms)		0 times
7		2000 (ms)	500 (ms)	0 (ms)		0 times
8		2000 (ms)	500 (ms)	0 (ms)		0 times
9		2000 (ms)	500 (ms)	0 (ms)		0 times

Summary processes:

Process: 0 registered... (2000 500 0 0)
Process: 0 I/O blocked... (2000 500 500 500)
Process: 1 registered... (2000 500 0 0)
Process: 1 I/O blocked... (2000 500 500 500)
Process: 0 registered... (2000 500 500 500)
Process: 0 I/O blocked... (2000 500 1000 1000)
Process: 1 registered... (2000 500 500 500)
Process: 1 I/O blocked... (2000 500 1000 1000)
Process: 0 registered... (2000 500 1000 1000)
Process: 0 I/O blocked... (2000 500 1500 1500)
Process: 1 registered... (2000 500 1000 1000)
Process: 1 I/O blocked... (2000 500 1500 1500)
Process: 0 registered... (2000 500 1500 1500)
Process: 0 completed... (2000 500 2000 2000)
Process: 1 registered... (2000 500 1500 1500)
Process: 1 completed... (2000 500 2000 2000)
Process: 2 registered... (2000 500 0 0)
Process: 2 I/O blocked... (2000 500 500 500)
Process: 3 registered... (2000 500 0 0)
Process: 3 I/O blocked... (2000 500 500 500)
Process: 2 registered... (2000 500 500 500)
Process: 2 I/O blocked... (2000 500 1000 1000)
Process: 3 registered... (2000 500 500 500)
Process: 3 I/O blocked... (2000 500 1000 1000)
Process: 2 registered... (2000 500 1000 1000)
Process: 2 I/O blocked... (2000 500 1500 1500)
Process: 3 registered... (2000 500 1000 1000)
Process: 3 I/O blocked... (2000 500 1500 1500)
Process: 2 registered... (2000 500 1500 1500)
Process: 2 completed... (2000 500 2000 2000)
Process: 3 registered... (2000 500 1500 1500)
Process: 3 completed... (2000 500 2000 2000)
Process: 4 registered... (2000 500 0 0)
Process: 4 I/O blocked... (2000 500 500 500)
Process: 5 registered... (2000 500 0 0)
Process: 5 I/O blocked... (2000 500 500 500)
Process: 4 registered... (2000 500 500 500)
Process: 4 I/O blocked... (2000 500 1000 1000)
Process: 5 registered... (2000 500 500 500)


Comment:

10000ms was not enough to execute all the processes, only processes 0,1,2,3 were executed fully,
processes 4 and 5 were executed partially, because during their execution, the maximum time (10000ms) has been exhausted
and the entire execution was terminated.Processes 6,7,8,9 did not even start executing.
To execute fully all the processes, we would need at least 20000ms(burst time of all proccesses, 2000ms * 10 processes = 20000ms)
